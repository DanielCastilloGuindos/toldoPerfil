---
import PopUpMessage from "@/components/PopUpMessage.astro";
---

<form
	class="w-full"
	onsubmit="event => event.preventDefault();return false"
>
	<fieldset class="flex flex-col gap-4 text-sm w-full">
		<div class="relative">
			<label for="fullname" class="text-indigo-950 text-sm cursor-pointer">
				¡Hola! ¿Cómo te llamas?
			</label>
			<input
				type="text"
				id="fullname"
				name="fullname"
				placeholder=""
				class="relative w-full py-1 px-4 outline-none text-indigo-900 placeholder-indigo-400 border-0 border-b border-indigo-900 cursor-pointer bg-transparent"
			/>
			<!-- <label
				for="fullname"
				class="absolute top-0 left-0 transition-all duration-300  scale-75 -top-1/2 peer-focus: peer-focus:scale-75 peer-placeholder-shown:-translate-y-0 peer-placeholder-shown:scale-100 -z-0 cursor-pointer"
				>¡Hola! ¿Cómo te llamas?</label
			> -->
		</div>
		<div class="relative">
			<label for="email" class="text-indigo-950 text-sm cursor-pointer">
				¿Cuál es tu correo?
			</label>
			<input
				type="email"
				id="email"
				name="email"
				placeholder=""
				class="relative w-full py-1 px-4 outline-none text-indigo-900 placeholder-indigo-400 border-0 border-b border-indigo-900 cursor-pointer bg-transparent"
			/>
		</div>
		<div class="relative">
			<label for="phone" class="text-indigo-950 text-sm cursor-pointer">
				¿A qué número podemos llamarte?
			</label>
			<input
				type="tel"
				id="phone"
				name="phone"
				placeholder=""
				class="relative w-full py-1 px-4 outline-none text-indigo-900 placeholder-indigo-400 border-0 border-b border-indigo-900 cursor-pointer bg-transparent"
			/>
		</div>
		<div class="relative">
			<label for="category" class="text-indigo-950 text-sm cursor-pointer">
				Lo que necesitas de nosotros es...
			</label
			>
			<select
				name="category"
				id="category"
				class="relative w-full py-1 px-4 outline-none text-indigo-900 placeholder-indigo-400 border-0 border-b border-indigo-900 cursor-pointer bg-transparent"
			>
				<option value="">Selecciona una opción</option>
				<option value="Pedir presupuesto">Pedir presupuesto</option>
				<option value="Información">Información</option>
			</select>
		</div>
		<div class="relative">
			<label for="description" class="text-indigo-950 text-sm cursor-pointer">
				¡Escribenos! Estaremos encantados de leerte
			</label>
			<textarea
				name="description"
				id="description"
				placeholder=""
				class="relative w-full py-1 px-4 outline-none text-indigo-900 placeholder-indigo-400 border-0 border-b border-indigo-900 cursor-pointer bg-transparent resize-none"
			></textarea>
		</div>
		<div class="flex justify-center sm:justify-end">
			<button
				id="contactButton"
				aria-label="Boton de formulario de contacto"
				type="submit"
				class="w-28 py-3 px-5 opacity-100[transition-property: translate] duration-200 ease-linear hover:-translate-y-0.5 button"
				>
				Contactar
			</button>
		</div>
	</fieldset>
</form>

<script>
	import { $, $$ } from "@/consts/dom-selector";
import Error from "@/sections/Error.astro";

	const fetch_api = `/api/sendEmail.json`;

	const submitForm = () => {
		saveInput();
		sendmail();
	};

	// save and retrieve generic formdata from localstorage
	const getFormData = () => {
		const store = Object.create(null);
		store.fullname = $("#fullname")?.value;
		store.email = $("#email")?.value;
		store.phone = $("#phone")?.value;
		store.category = $("#category")?.value;
		store.description = $("#description")?.value;
		return store;
	};

	const saveInput = () => {
		const { description, category, ...rest } = getFormData();
		localStorage.setItem("contactInfo", JSON.stringify(rest));
	};

	const retrieveInfo = () => {
		const store = JSON.parse(localStorage.getItem("contactInfo") || "{}");
		$("#fullname").value = store.fullname || "";
		$("#email").value = store.email || "";
		$("#phone").value = store.phone || "";
	};
	// end: localstorage

	// This kicks thing of, should really be on window.onload but...
	const submitBtn = $('[type="submit"]');
	submitBtn?.addEventListener("click", submitForm);
	retrieveInfo();
	// window.onload = () => {} // don't know why this wont work

	const sendmail = async () => {
		const { fullname, email, phone, category: subject, description } = getFormData();
		const htmlMsg = `<p>${fullname}(${phone} - ${email}) escribe:</p><p>${description}</p>`;

		let msg = '¡Enviado!';
		let bgDisplay = 'bg-green-600';

		try {
			const res = await fetch(fetch_api, {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					from: 'no-reply@toldoperfil.es',
					to: 'danielcastilloguindos@toldoperfil.es',
					subject: subject,
					html: htmlMsg,
					text: htmlMsg.replace(/<[^>]*>/g, ''),
				}),
			})

			const data = await res.json();
			
			if (data.message.statusCode !== 200) throw Error;
		} catch (error) {
			msg = '¡Error!';
			bgDisplay = 'bg-red-600';
		} finally {
			$('#contactButton').innerHTML = msg;
			$('#contactButton').classList.add( bgDisplay, '!text-white');
		}
	};

	// Función para cargar un componente de Astro con atributos
	const loadAstroComponent = (componentName, attributes) => {
		const astroComponent = document.createElement(componentName);
		// Establecer los atributos
		Object.keys(attributes).forEach(key => {
			astroComponent.setAttribute(key, attributes[key]);
		});
		document.body.appendChild(astroComponent);
	};
</script>
